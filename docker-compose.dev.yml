services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: gin_mx_app_dev
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - go_modules:/go/pkg/mod
    environment:
      - ENV=${ENV}
      - PORT=${PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_SSLMODE=${DB_SSLMODE}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - gin_mx_network

  postgres:
    image: postgres:15-alpine
    container_name: gin_mx_postgres_dev
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gin_mx_network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: gin_mx_pgadmin_dev
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_CONFIG_SERVER_MODE=${PGADMIN_CONFIG_SERVER_MODE}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - gin_mx_network

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  go_modules:
    driver: local

networks:
  gin_mx_network:
    driver: bridge